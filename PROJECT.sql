drop table PROJECT1_fines;
drop table PROJECT1_book_loans;
drop table PROJECT1_borrower;
drop table PROJECT1_book_copies;
drop table PROJECT1_library_branch;
drop table PROJECT1_book_authors;
drop table PROJECT1_book;
drop table PROJECT1_authors;

-- CREATING AND POPULATING          PROJECT1_BOOK 
CREATE TABLE PROJECT1_BOOK 
(ISBN VARCHAR2(20) NOT NULL,
TITLE VARCHAR2(512) NOT NULL,
CONSTRAINT ISBNPK PRIMARY KEY (ISBN));
 
INSERT INTO PROJECT1_BOOK (SELECT ISBN10, TITLE FROM PROJECT1_BOOKS_LOAD);









-- CREATING AND POPULATING          PROJECT1_AUTHORS 
CREATE TABLE PROJECT1_AUTHORS 
(AUTHOR_ID VARCHAR2(30) NOT NULL,
NAME VARCHAR2(256),
CONSTRAINT AUTHORIDPK PRIMARY KEY (AUTHOR_ID));

CREATE SEQUENCE AUTHORS_SEQ START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
drop SEQUENCE AUTHORS_SEQ;

INSERT INTO PROJECT1_AUTHORS SELECT AUTHORS_SEQ.NEXTVAL, b.* from (SELECT REGEXP_SUBSTR(PROJECT1_BOOKS_LOAD.AUTHro,'[^,;]+',1,1) 
FROM PROJECT1_BOOKS_LOAD
UNION SELECT REGEXP_SUBSTR(PROJECT1_BOOKS_LOAD.AUTHRO,'[^,;]+',1,2) FROM PROJECT1_BOOKS_LOAD
UNION SELECT REGEXP_SUBSTR(PROJECT1_BOOKS_LOAD.AUTHRO,'[^,;]+',1,3) FROM PROJECT1_BOOKS_LOAD
UNION SELECT REGEXP_SUBSTR(PROJECT1_BOOKS_LOAD.AUTHRO,'[^,;]+',1,4) FROM PROJECT1_BOOKS_LOAD
UNION SELECT REGEXP_SUBSTR(PROJECT1_BOOKS_LOAD.AUTHRO,'[^,;]+',1,5) FROM PROJECT1_BOOKS_LOAD) b;

 

-- CREATING AND POPULATING              PROJECT1_BOOK_AUTHORS 
CREATE TABLE PROJECT1_BOOK_AUTHORS 
(AUTHOR_ID VARCHAR2(30) NOT NULL,
ISBN VARCHAR2(30) NOT NULL,
CONSTRAINT AUTHORS_PK PRIMARY KEY (AUTHOR_ID, ISBN),
CONSTRAINT ISBNFK FOREIGN KEY (ISBN) REFERENCES PROJECT1_BOOK,
CONSTRAINT AUTHORIDFK FOREIGN KEY (AUTHOR_ID) REFERENCES PROJECT1_AUTHORS);



INSERT INTO PROJECT1_book_authors (SELECT PROJECT1_AUTHORS.AUTHOR_ID, PROJECT1_BOOKS_LOAD.ISBN10 FROM PROJECT1_AUTHORS
JOIN PROJECT1_BOOKS_LOAD ON project1_authors.NAME = (SELECT REGEXP_SUBSTR(PROJECT1_BOOKS_LOAD.AUTHRO,'[^,;]+',1,1) FROM PROJECT1_BOOKS_LOAD b
WHERE b.ISBN10 = PROJECT1_BOOKS_LOAD.ISBN10)
OR project1_authors.NAME = (SELECT REGEXP_SUBSTR(PROJECT1_BOOKS_LOAD.AUTHRO,'[^,;]+',1,2) FROM PROJECT1_BOOKS_LOAD b
WHERE b.ISBN10 = PROJECT1_BOOKS_LOAD.ISBN10)
OR project1_authors.NAME = (SELECT REGEXP_SUBSTR(PROJECT1_BOOKS_LOAD.AUTHRO,'[^,;]+',1,3) FROM PROJECT1_BOOKS_LOAD b
WHERE b.ISBN10 = PROJECT1_BOOKS_LOAD.ISBN10)
OR project1_authors.NAME = (SELECT REGEXP_SUBSTR(PROJECT1_BOOKS_LOAD.AUTHRO,'[^,;]+',1,4) FROM PROJECT1_BOOKS_LOAD b
WHERE b.ISBN10 = PROJECT1_BOOKS_LOAD.ISBN10)
OR project1_authors.NAME = (SELECT REGEXP_SUBSTR(PROJECT1_BOOKS_LOAD.AUTHRO,'[^,;]+',1,5) FROM PROJECT1_BOOKS_LOAD b
WHERE b.ISBN10 = PROJECT1_BOOKS_LOAD.ISBN10));











-- CREATING AND ALTERING              PROJECT1_LIBRARY_BRANCH_LOAD 
CREATE TABLE PROJECT1_LIBRARY_BRANCH AS SELECT * FROM PROJECT1_LIBRARY_BRANCH_LOAD;
ALTER TABLE PROJECT1_LIBRARY_BRANCH ADD CONSTRAINT LIBBRANCHPK PRIMARY KEY (BRANCH_ID);










-- CREATING AND ALTERING              PROJECT1_BORROWER 
CREATE TABLE PROJECT1_BORROWER 
(CARD_NO VARCHAR2(20) NOT NULL,
SSN VARCHAR2(20) NOT NULL,
FNAME VARCHAR2(20),
LNAME VARCHAR2(20),
ADDRESS VARCHAR2(128) NOT NULL,
PHONE VARCHAR2(15) NOT NULL,
CONSTRAINT CARDPK PRIMARY KEY (CARD_NO));

INSERT INTO PROJECT1_BORROWER SELECT ID0000ID, 
SSN, FIRST_NAME, LAST_NAME,ADDRESS || ', ' || CITY || ', ' || STATE,PHONE 
FROM project1_borrowers_load;



-- CREATING AND POPULATING              PROJECT1_BOOK_COPIES 
CREATE TABLE PROJECT1_BOOK_COPIES
(BOOK_ID VARCHAR2(20),
ISBN VARCHAR2(20),
BRANCH_ID NUMERIC(3),
CONSTRAINT BOOK_IDPK PRIMARY KEY (BOOK_ID),
CONSTRAINT ISBNBCFK FOREIGN KEY (ISBN) REFERENCES PROJECT1_BOOK,
CONSTRAINT BRANCHFK FOREIGN KEY (BRANCH_ID) REFERENCES PROJECT1_LIBRARY_BRANCH);

create sequence book_id_seq start with 1 increment by 1 nocache nocycle;
DROP SEQUENCE BOOK_ID_SEQ;


DECLARE 
   rep_cnt NUMBER;
   CURSOR c_trx
   IS
    SELECT 
        book_id,branch_id,no_of_copies  
    FROM project1_bookS_copies_load;
BEGIN 
   FOR r_trx IN c_trx
   LOOP
    
   
    rep_cnt := r_trx.no_of_copies;
    LOOP
        IF  rep_cnt <= 0
        THEN
            EXIT;
        END IF;
        INSERT INTO project1_book_copies VALUES (book_id_seq.nextval,r_trx.book_id,r_trx.branch_id);
        rep_cnt := rep_cnt-1;
    END LOOP;
  END LOOP;
END;
/


-- CREATING AND POPULATING              PROJECT1_BOOK_LOANS 
CREATE TABLE PROJECT1_BOOK_LOANS
(LOAN_ID VARCHAR2(20),
BOOK_ID VARCHAR2(20),
CARD_NO VARCHAR2(20),
DATE_OUT DATE,
DUE_DATE DATE,
DATE_IN DATE,
CONSTRAINT LOAN_IDPK PRIMARY KEY (LOAN_ID),
CONSTRAINT BOOK_IDFK FOREIGN KEY (BOOK_ID) REFERENCES PROJECT1_BOOK_COPIES,
CONSTRAINT CARD_NOFK FOREIGN KEY (CARD_NO) REFERENCES PROJECT1_BORROWER);

CREATE SEQUENCE LOANID_SEQ START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
DROP SEQUENCE LOANID_SEQ;
INSERT INTO PROJECT1_BOOK_LOANS
SELECT  LOANID_SEQ.NEXTVAL, book_id, card_no, date_out, date_out + 30 AS due_date,
CASE WHEN ROWNUM <= 50
THEN date_out + 30 + ROUND(DBMS_RANDOM.value(1,10),0)
ELSE date_out + ROUND(DBMS_RANDOM.value(1,30),0)
END
FROM (
SELECT x.card_no AS card_no, y.book_id,y.isbn,
DENSE_RANK() OVER(ORDER BY card_no) AS bor_rank,
ROW_NUMBER() OVER(PARTITION BY card_no ORDER BY card_no,book_id) AS bb_rank,
SYSDATE - ROUND(DBMS_RANDOM.value(1,30),0) AS date_out
FROM
(SELECT * FROM
(SELECT card_no
FROM PROJECT1_BORROWER
ORDER BY DBMS_RANDOM.random)
WHERE ROWNUM <= 200 ) x,
(SELECT * FROM
(SELECT book_id,isbn
FROM PROJECT1_BOOK_COPIES
ORDER BY DBMS_RANDOM.random )
WHERE ROWNUM <= 100 ) y
ORDER BY DBMS_RANDOM.random )
WHERE (bor_rank) = bb_rank-1
OR (bor_rank) = bb_rank
OR bor_rank - 100 = bb_rank
OR bor_rank - 100 = bb_rank -1
OR (bor_rank=200 and bb_rank=1);





----- CREATING AND POPULATING              PROJECT1_FINES
CREATE TABLE PROJECT1_FINES(
LOAN_ID VARCHAR2(20),
FINE_AMT VARCHAR2(10),
PAID VARCHAR2(10),
CONSTRAINT FINE_PK PRIMARY KEY (LOAN_ID),
CONSTRAINT FINE_FK FOREIGN KEY (LOAN_ID) REFERENCES PROJECT1_BOOK_LOANS);


INSERT INTO PROJECT1_FINES(loan_id, fine_amt)
(SELECT loan_id, floor(TRUNC(date_in) - TRUNC(due_date)) * 10
FROM PROJECT1_BOOK_LOANS
WHERE FLOOR(TRUNC(due_date) - TRUNC(date_in)) < 0);




-- INDEX CREATION

CREATE INDEX BOOK_TITLE_ISBN_INDEX ON PROJECT1_BOOK(ISBN,TITLE);
CREATE INDEX AUTHOR_INDEX ON PROJECT1_AUTHORS(AUTHOR_ID,NAME);








-- SEARCH BASED ON TITLE, AUTHOR NAME AND ISBN

---------- SEARCH QUERY
----------






SELECT k.BOOK_ID, k.BRANCH_ID, k.ISBN, k.TITLE, k.AUTHORS FROM
(SELECT
BOOK_ID, BRANCH_ID, ISBN, TITLE,
LISTAGG(NAME, ', ') AS AUTHORS
FROM
( SELECT
DISTINCT bc.BOOK_ID, bc.BRANCH_ID, b.ISBN, b.TITLE,
pa.author_id, pa.name
FROM
project1_book b, PROJECT1_AUTHORS pa,
PROJECT1_BOOK_AUTHORS ba, PROJECT1_BOOK_COPIES bc
WHERE
ba.ISBN = b.ISBN
AND ba.AUTHOR_ID = pa.AUTHOR_ID
AND bc.ISBN = b.ISBN
AND (LOWER(b.TITLE) LIKE LOWER('%AIR%')
OR LOWER(pa.NAME) LIKE LOWER('%AIR%')
OR LOWER(b.ISBN) LIKE LOWER('%AIR%')
OR bc.BOOK_ID LIKE LOWER('%AIR%'))
ORDER BY bc.BOOK_ID)
WHERE BRANCH_ID = 2
GROUP BY BOOK_ID, BRANCH_ID, ISBN, TITLE
ORDER BY ISBN, BOOK_ID) k
LEFT JOIN
(SELECT * FROM PROJECT1_BOOK_LOANS
WHERE DATE_IN IS NULL
AND DATE_IN > SYSDATE) l
ON k.BOOK_ID = l.BOOK_ID
ORDER BY TITLE;












-- TOP 10 BOOKS FOR WHICH MAXIMUM FINES WERE PAID

SELECT * FROM (SELECT b.TITLE, b.ISBN, SUM(f.FINE_AMT) FINE_AMOUNT FROM PROJECT1_FINES f
JOIN PROJECT1_BOOK_LOANS l ON f.LOAN_ID = l.loan_id
JOIN project1_book_copies c ON c.book_id = l.book_id
JOIN PROJECT1_BOOK b ON b.ISBN = c.ISBN 
group by  b.TITLE, b.ISBN
ORDER BY FINE_AMOUNT DESC)
WHERE ROWNUM < 11;




--Top 15 least loaned books


SELECT A.ISBN, A.Title, Count(A.ISBN) AS No_of_books_loaned
FROM PROJECT1_BOOK A, PROJECT1_BOOK_LOANS B, PROJECT1_BOOK_COPIES C
WHERE A.ISBN = C.ISBN
AND C.BOOK_ID = B.BOOK_ID
AND B.DATE_OUT BETWEEN (sysdate -30) AND sysdate
GROUP BY A.ISBN, A.Title
ORDER BY COUNT(A.ISBN)
FETCH NEXT 15 ROWS ONLY;


--Top 15 popular books in the last month



SELECT pb.ISBN, pb.Title, COUNT(pb.ISBN) AS No_of_books_loaned
FROM PROJECT1_BOOK pb, PROJECT1_BOOK_LOANS bl, PROJECT1_BOOK_COPIES bc
WHERE pb.ISBN = bc.ISBN
AND bc.BOOK_ID = bl.BOOK_ID
AND bl.date_out
BETWEEN (sysdate-30)
AND sysdate
GROUP BY pb.ISBN, pb.Title
ORDER BY COUNT(pb.ISBN) DESC
FETCH NEXT 15 ROWS ONLY;






